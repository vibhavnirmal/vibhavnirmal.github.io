{
    "projects": [
        {
            "title": "Live 360 3D video streaming with Insta360",
            "titleLink": "#",
            "description": "The objective was to live stream 360-degree 3D videos in real-time using the Insta360 camera. This was achieved through the implementation of WebRTC technology and a Linode server, enabling real-time broadcasting to the internet.",
            "multipleLinks": [
            ],
            "date": "2023-12-06",
            "image": "resources\\videos\\live360.mp4",
            "tags": []
        },
        {
            "title": "4D MOT",
            "titleLink": "#",
            "description": "In this project I learned about the different methods used for multi-object tracking and implemented a 4D MOT inference. The model was pretrained on the Kitti dataset and evaluated on the Kitti Val set. This extends the 3D object detection project by adding a tracking module to track the objects through time.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/4dmot.html"
                }
            ],
            "date": "2023-12-04",
            "image": "resources\\videos\\tracking_mot.mp4",
            "tags": ["computervision", "python", "machinelearning", "deeplearning", "blog"]
        },
        {
            "title": "GLPDepth inference with Kitti dataset",
            "titleLink": "#",
            "description": "This project aims to learn and implement GLPDepth model on the Kitti dataset for monocular depth estimation. GLPDepth is a single-stage model that uses a global-local-global feature pyramid network to extract global and local features from the input image and then uses a global-local fusion module to fuse the features and predict the depth map.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://github.com/vibhavnirmal/GLPDepth/tree/main"
                }
            ],
            "date": "2023-11-28",
            "image": "resources\\images\\stacked_images.gif",
            "tags": ["computervision", "python", "machinelearning", "deeplearning"]
        },
        {
            "title": "3D object detection with Kitti dataset and PointRCNN",
            "titleLink": "#",
            "description": "This project aims to train and implement a custom PointRCNN model on the Kitti dataset for 3D object detection. PointRCNN is a two-stage model that first generates a set of 3D region proposals from the input point cloud and then refines them in a point-wise manner to obtain the final detection results.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/3dObjectDetection.html"
                }
            ],
            "date": "2023-11-27",
            "image": "resources\\images\\output_19.gif",
            "tags": ["computervision", "python", "machinelearning", "deeplearning", "blog"]
        },
        {
            "title": "Training and implementing YOLOP: YOLO Panoptic Driving Perception (MIR2022)",
            "titleLink": "#",
            "description": "This project aims to train and implement YOLOP: YOLO Panoptic Driving Perception (MIR2022) on the custom highway dataset. YOLOP is a real-time panoptic segmentation model that can simultaneously detect and segment vehicles in a single forward pass",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Linkedin_LogoS.png",
                    "link": "https://www.linkedin.com/posts/vibhavnirmal_robot-gopro-train-activity-7089826130152603648-OO0y"
                },
                {
                    "icon": "resources/images/logos/Youtube_LogoS.png",
                    "link": "https://www.youtube.com/shorts/R_f41Wi6t6I"
                }
            ],
            "date": "2023-07-28",
            "image": "resources\\videos\\yolop.mp4",
            "tags": ["computervision", "python", "machinelearning"]
        },
        {
            "title": "Hand and Wrist Detection with 6MB model and 30FPS",
            "titleLink": "#",
            "description": "This project aims to detect the hand and wrist of a person in a video stream using a small (around 6 MB) model and achieve a frame rate. Model was trained on top of Ultralytics YOLOv8n with 3.2M parameters.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/handDetection.html"
                }
            ],
            "date": "2023-06-01",
            "image": "resources\\images\\vinHandDet.gif",
            "tags": ["computervision", "python", "machinelearning", "blog"]
        },
        {
            "title": "rtabmap | databaseviewer and localization | Part 2/2",
            "titleLink": "#",
            "description": "The RTAB-Map Database Viewer and Localization demo video showcases the capabilities of RTAB-Map in mapping and localizing in robust environments. By utilizing the RTAB-Map database, users can visualize, optimize, edit, refine, and interact with previously collected map data. The video highlights the flexibility of RTAB-Map in handling various odometry approaches and sensor configurations, making it a powerful tool for SLAM implementation.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Linkedin_LogoS.png",
                    "link": "https://www.linkedin.com/feed/update/urn:li:activity:7066289437231501312/"
                },
                {
                    "icon": "resources/images/logos/Youtube_LogoS.png",
                    "link": "https://youtu.be/QAJaO51hcDo"
                }
            ],
            "date": "2023-05-22",
            "image": "",
            "tags": ["computervision", "ros", "robotics", "python", "youtube"]
        },
        {
            "title": "rtabmap | teleop and mapping | Part 1/2",
            "titleLink": "#",
            "description": "Real time appearance based mapping is a technique used to create a map of an unknown environment using a single camera. The map is created by extracting features from the camera images and matching them with features from the previous images. The map is then updated with the new features and the camera pose is estimated using the map and the camera images.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Linkedin_LogoS.png",
                    "link": "https://www.linkedin.com/feed/update/urn:li:activity:7064180676119433217/"
                },
                {
                    "icon": "resources/images/logos/Youtube_LogoS.png",
                    "link": "https://youtu.be/MfN_QANgMqU"
                }
            ],
            "date": "2023-05-14",
            "image": "resources\\videos\\rtabmap_mapping.mp4",
            "tags": ["computervision", "robotics", "ros", "python", "youtube"]
        },
        {
            "title": "Unreal Engine 5 First Person Shooter Game (using blueprints)",
            "titleLink": "#",
            "description": "The game features a playable character who can move around the map and shoot at static and dynamic targets in the shooting range. The game is timed and has a different score system for different types of targets. The game also features a main menu and a pause menu.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/fps.html"
                }
            ],
            "date": "2023-04-24",
            "image": "resources\\videos\\gp.mp4",
            "tags": ["gamedev", "blog", "unrealengine"]
        },
        {
            "title": "Navigation through the unknown maze and cleaning up the blocks with Lego Mindstorms EV3",
            "titleLink": "#",
            "description": "This project aims to navigate through an unknown maze and clean up the blocks in the maze using a Lego Mindstorms EV3 robot. The robot uses a color sensor to recognize the blocks and ultrasonic sensors to measure the distance and detect the walls of the maze. It then uses the detected information to navigate through the maze and clean up the blocks.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Youtube_LogoS.png",
                    "link": "https://youtu.be/jDQ4oOVbPnI"
                }
            ],
            "date": "2022-12-01",
            "image": "resources\\videos\\maze.mp4",
            "tags": [
                "youtube",
                "robotics"
            ]
        },
        {
            "title": "Mercado Escolar - School Supplies Ecommerce Website (React)",
            "titleLink": "#",
            "description": "Mercado Escolar is an ecommerce website that allows users to purchase school supplies online. The website features a main page, a product page, a shopping cart, and a checkout page. The website also features a login page and a registration page for users to create accounts and login to their accounts. Login credentials required for business, admin, and superadmin accounts",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/schoolMarketplace"
                }
            ],
            "date": "2022-11-11",
            "image": "resources\\videos\\mercadoEscolar.mp4",
            "tags": ["webdev", "github"]
        },
        {
            "title": "Installing Laravel on Ubuntu 20.04: Laravel v9.40.1 (PHP v8.1.12)",
            "titleLink": "#",
            "description": "A step-by-step guide on how to install PHP and Laravel on a Linux machine using the apt repository",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/laravelOnLinux.html"
                },
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://gist.github.com/vibhavnirmal/83d2e98260bfe69b60d9223fa7e0cebb"
                }
            ],
            "date": "2022-11-18",
            "image": "https://user-images.githubusercontent.com/28863808/202570253-46750e98-51a5-4b1d-a991-39f9bc25e942.png",
            "tags": ["github", "webdev", "blog", "linux"]
        },
        {
            "title": "Square root of integer without using sqrt() function",
            "titleLink": "#",
            "description": "The Newton-Raphson method is an iterative algorithm that can be used to approximate the square root of a number by improving an initial estimate at each iteration using a formula based on the equation y * y = x.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/squareRoot.html"
                },
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://gist.github.com/vibhavnirmal/3870d1ff4a49ad564ea79872e4a16bf3"
                }
            ],
            "date": "July 25, 2022",
            "image": "",
            "tags": [
                "github",
                "code",
                "python",
                "blog"
            ]
        },
        {
            "title": "The comma.ai Calibration Challenge!",
            "titleLink": "#",
            "description": "This project aims to estimate the pitch and yaw angles of a camera mounted in a vehicle relative to the vehicle's direction. It uses feature detection and matching techniques to find correspondences between two consecutive frames. It then applies a robust estimation method to compute the essential matrix and decompose it into rotation and translation components. The rotation matrix is then used to calculate the pitch and yaw angles of the camera motion.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://github.com/vibhavnirmal/calibration_challenge"
                }
            ],
            "date": "2022-05-10",
            "image": "",
            "tags": [
                "github",
                "code",
                "python",
                "computervision"
            ]
        },
        {
            "title": "Obstacle Avoidance test runs for the Unmanned Vehicle System",
            "titleLink": "#",
            "description": "This project aims to detect obstacles in the path of a 6WD robot vehicle and avoid them by steering the vehicle in the opposite direction with reactive control. It uses a lidar mounted on the vehicle to capture scans of the environment and detect unknown obstacles using scan matching. The vehicle is then steered in the opposite direction to avoid the obstacle.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Youtube_LogoS.png",
                    "link": "https://youtu.be/AnI3iiBqm6w"
                }
            ],
            "date": "2022-05-02",
            "image": "resources\\videos\\obsAvoidance.mp4",
            "tags": [
                "youtube",
                "matlab",
                "ros",
                "lidar",
                "computervision"
            ]
        },
        {
            "title": "Digital Budget Tracker and Pig Dice Game in Javascript",
            "titleLink": "#",
            "description": "The Digital Budget Tracker is a tool that helps users track and manage their personal or business finances by providing a platform to input and organize income and expenditure data. The Pig Dice Game is a simple dice game that involves rolling a dice and earning points based on the numbers rolled. Both of these applications are designed with Javascript to be user-friendly and interactive, providing a convenient and enjoyable experience for users.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/learningJS.html"
                }
            ],
            "date": "2020-10-15",
            "image": "resources\\images\\pigDice.png",
            "tags": [
                "github",
                "webdev",
                "code",
                "blog"
            ]
        },
        {
            "title": "Dart dataset and PyPlot Scatter function Article",
            "titleLink": "#",
            "description": "The Dart dataset is a collection of data points that can be plotted using the PyPlot Scatter function in Python. This function allows users to create scatter plots, which are visual representations of data points that use Cartesian coordinates to display values for typically two variables for a set of data.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Medium_Logo.png",
                    "link": "https://medium.com/@vibhavnirmal/dart-data-set-and-pyplot-scatter-function-f4f98524dc8b?source=friends_link&sk=531f60f39d95646fd7a59e5754569bd6"
                },
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://github.com/vibhavnirmal/MachineLearningPrograms/tree/master/Classification/dart"
                }
            ],
            "date": "2020-07-31",
            "image": "resources\\images\\mediumDart.png",
            "tags": [
                "medium",
                "python",
                "machinelearning",
                "code",
                "github",
                "blog"
            ]
        },
        {
            "title": "Knowledge Graph Based QnA Post",
            "titleLink": "#",
            "description": "Our question answering system uses Entity pairs Extraction and Knowledge Graph Construction to extract entities from the input paragraph and construct a knowledge graph for answering user questions. It utilizes dependency parsing tools and techniques, and is effective at answering \"who,\" \"what,\" \"when,\" and \"where\" questions. However, the answers obtained are currently simple and limited in word count.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Linkedin_LogoS.png",
                    "link": "https://www.linkedin.com/posts/philipvollet_nlp-machinelearning-graphs-activity-6680030817038725120-pczn/"
                },
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://github.com/vibhavnirmal/Knowledge-Graph-based-QnA"
                }
            ],
            "date": "2020-06-20",
            "image": "",
            "tags": [
                "python",
                "github",
                "machinelearning",
                "code",
                "linkedin"
            ]
        },
        {
            "title": "Knowledge Graph Based QnA YouTube Presentation",
            "titleLink": "#",
            "description": "Implemented a knowledge graph representation project to facilitate question answering by extracting key entities such as subject, predicate, and object. This innovative approach leverages the power of structured data to provide more accurate and brief answers to user inquiries.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Youtube_LogoS.png",
                    "link": "https://www.youtube.com/watch?v=u9Nr8wjTPZ8"
                },
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://github.com/vibhavnirmal/Knowledge-Graph-based-QnA"
                }
            ],
            "date": "2020-04-05",
            "image": "resources\\images\\kwGraph.png",
            "tags": ["python", "youtube", "machinelearning", "tutorial"]
        },
        {
            "title": "How to install Unreal Engine 4 in arch linux Article",
            "titleLink": "#",
            "description": "This article outlines the steps to install Unreal Engine 4 on an Arch Linux operating system. It provides detailed instructions on how to properly set up and configure UE4 to run smoothly on the Linux platform",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Medium_Logo.png",
                    "link": "https://medium.com/@vibhavnirmal/how-to-install-unreal-engine-4-in-arch-linux-1d7b910f375f"
                }
            ],
            "date": "2019-07-20",
            "image": "",
            "tags": ["medium", "linux", "gamedev", "tutorial", "blog", "unrealengine"]
        },
        {
            "title": "Maths Equation Solver Blog",
            "titleLink": "#",
            "description": "Explored the different types of equation solvers available and how they can be used to solve complex mathematical equations with ease.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/mathsSolver.html"
                },
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://github.com/vibhavnirmal/MathProblems"
                }
            ],
            "date": "2018-09-22",
            "image": "",
            "tags": ["github", "python", "code", "blog"]
        },
        {
            "title": "Instagram Chats Save and read offline Blog",
            "titleLink": "#",
            "description": "This script allows users to save and read Instagram chats in a readable text format offline. It currently only works for personal chats.",
            "multipleLinks": [
                {
                    "icon": "resources/images/logos/Blogpost_LogoS.png",
                    "link": "https://vibhavnirmal.github.io/blogs/instaChatSave.html"
                },
                {
                    "icon": "resources/images/logos/GitHub_LogoS.png",
                    "link": "https://github.com/vibhavnirmal/InstaChatSave"
                }
            ],
            "date": "2018-09-17",
            "image": "",
            "tags": ["github", "python", "code", "blog", "instagram"]
        }
    ]
}